#[test_only]
module rui::rui_tests;

use rui::semaphore;

#[test]
fun test_verify_proof() {
    let verifying_key = x"331b50460e9cbdd64e7c17c231a9a9e91b76caf871b22b8229644d181f29f59e4187fd5e0f04843a01d7b87b2b2cf94c27f54f2cfe95f74de6b0f659d72ac30f7c32a4913190f0c03b213960ed6ba75097d80ce08658239717b5d597cf44602d1cc38eed7f06e93fdd0dd4a586db78b3a5c94f300042e11c465c003aabf21f135df228aec7483ef86d742fc773ffc258971585d9b6b6af35726cbc5ae80cb1aa60aae9c27331c3f4661147018ae2c0c2f910f9e68b99e7d0e185c38ea7aa722b671fe3adc0ce3eee2737c77bd4a55a6218825e83c4fadba47e331cc7a860b029020000000000000099a50c45c502537d9df89198f7be731bd64e89c50fcaf7e90a4c6a3301cb8f0450b3e64322ab383aa97b6c5bacddeea4b3259e69e00dcc2eac2b963da716d306";
    let proof_points = x"6e0fcea2bc66029753e67b88234e836851f407f078c9eb2b58563743a1159b0b64faef563de2479318ce9d50a03066a5a69e825e1306c3968e0354bce9b0ce039cc9a3d9cf33a5ac899e65e16bc35fa5e90996c5e527f4085f38d7719097dc107e9d63c3b4f0ffc3a4b261ec524c4709837d5b490a2f6704e6790e18076d4713";
    let public_inputs = x"84c530eef16efcef968c70bfc4d12665b68cd34ce0926440c8ee5cda1e283114";

    assert!(semaphore::verify_proof(verifying_key, proof_points, public_inputs));
}
